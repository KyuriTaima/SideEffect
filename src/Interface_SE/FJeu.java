/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface_SE;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.io.File;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import sideeffect.Joueur;
import sideeffect.Piece;
import sideeffect.Plateau;

/**
 *
 * @author mserfaty
 */
public class FJeu extends javax.swing.JDialog {
    
    private JLabel[][] tabLabels;
    private String pseudo = new String();
    private Joueur J;
    private int score = 0;
    Plateau P = new Plateau();
    JOptionPane fenetre = new JOptionPane();

    /**
     * Creates new form FJeu
     */
    public FJeu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialiser();
        P.getGrille().creerGrille(20);
        P.getGrille().afficher(tabLabels);
        pseudo = fenetre.showInputDialog(null, "Qui veux défier Side Effect ?", "Peudo", JOptionPane.QUESTION_MESSAGE);
        J = new Joueur(pseudo);
        this.pack();
    }
    
    public void jouer(String nom) {
  try {
   File file = new File(nom);
   Clip clip = AudioSystem.getClip();
   clip.open(AudioSystem.getAudioInputStream(file));
   clip.start();
  } catch (Exception e) {
   System.err.println("Erreur musique");
  }
 }
    
    public void afficherPiece(JPanel p, Piece piece) {
        p.removeAll();
        Dimension dim = new Dimension(30, 30);
        JLabel[][] tabLabel = new JLabel[3][3];
        for (int j = 0; j < 3; j++) {
            for (int i = 0; i < 3; i++) {
                JLabel label = new JLabel();
                label.setPreferredSize(dim);
                label.setOpaque(true);
                label.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                if (piece.getForme()[i][j] == 2) {
                    label.setBackground(Color.BLUE);
                } else if (piece.getForme()[i][j] == 1) {
                    label.setBackground(Color.RED);
                }
                tabLabel[i][j] = label;
                p.add(label);
            }
        }
    }
    
    public void initPieces(JPanel p, Piece piece) {
        p.removeAll();
        GridLayout lpieces = new GridLayout(0, 3);
        p.setLayout(lpieces);
        afficherPiece(p, piece);
    }
    
    public void initialiser() {
        
        pGrille.removeAll();
        GridLayout gest = new GridLayout(0, 20);
        pGrille.setLayout(gest);
        tabLabels = new JLabel[20][20];
        for (int j = 0; j < 20; j++) {
            for (int i = 0; i < 20; i++) {
                JLabel lab = new JLabel();
                Dimension dim = new Dimension(30, 30);
                lab.setPreferredSize(dim);
                
                lab.setOpaque(true);
                lab.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                
                tabLabels[i][j] = lab;
                pGrille.add(lab);
            }
            
        }
        for (int i = 0; i < 4; i++) {
            P.créerPiece(i);
        }
        initPieces(pPiece1, P.getPlateau()[0]);
        initPieces(pPiece2, P.getPlateau()[1]);
        initPieces(pPiece3, P.getPlateau()[2]);
        initPieces(pPiece4, P.getPlateau()[3]);
        
        this.pack(); //redessine la fiche pour faire apparaitre les labels
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pPiece1 = new javax.swing.JPanel();
        pPiece2 = new javax.swing.JPanel();
        pPiece3 = new javax.swing.JPanel();
        pPiece4 = new javax.swing.JPanel();
        pGrille = new javax.swing.JPanel();
        jScores = new javax.swing.JPanel();
        jScore = new javax.swing.JLabel();
        bRetour = new javax.swing.JButton();
        jAbandon = new javax.swing.JButton();
        jSauv = new javax.swing.JButton();
        bChargement = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 950));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        pPiece1.setBackground(new java.awt.Color(255, 51, 51));
        pPiece1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pPiece1MouseDragged(evt);
            }
        });
        pPiece1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPiece1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pPiece1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pPiece1Layout = new javax.swing.GroupLayout(pPiece1);
        pPiece1.setLayout(pPiece1Layout);
        pPiece1Layout.setHorizontalGroup(
            pPiece1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pPiece1Layout.setVerticalGroup(
            pPiece1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(pPiece1);

        pPiece2.setBackground(new java.awt.Color(255, 51, 51));
        pPiece2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pPiece2MouseDragged(evt);
            }
        });
        pPiece2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPiece2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pPiece2MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pPiece2Layout = new javax.swing.GroupLayout(pPiece2);
        pPiece2.setLayout(pPiece2Layout);
        pPiece2Layout.setHorizontalGroup(
            pPiece2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pPiece2Layout.setVerticalGroup(
            pPiece2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(pPiece2);

        pPiece3.setBackground(new java.awt.Color(255, 51, 51));
        pPiece3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pPiece3MouseDragged(evt);
            }
        });
        pPiece3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPiece3MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pPiece3MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pPiece3Layout = new javax.swing.GroupLayout(pPiece3);
        pPiece3.setLayout(pPiece3Layout);
        pPiece3Layout.setHorizontalGroup(
            pPiece3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pPiece3Layout.setVerticalGroup(
            pPiece3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(pPiece3);

        pPiece4.setBackground(new java.awt.Color(255, 51, 51));
        pPiece4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pPiece4MouseDragged(evt);
            }
        });
        pPiece4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPiece4MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pPiece4MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pPiece4Layout = new javax.swing.GroupLayout(pPiece4);
        pPiece4.setLayout(pPiece4Layout);
        pPiece4Layout.setHorizontalGroup(
            pPiece4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        pPiece4Layout.setVerticalGroup(
            pPiece4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(pPiece4);

        pGrille.setPreferredSize(new java.awt.Dimension(600, 600));
        pGrille.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pGrilleMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pGrilleLayout = new javax.swing.GroupLayout(pGrille);
        pGrille.setLayout(pGrilleLayout);
        pGrilleLayout.setHorizontalGroup(
            pGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        pGrilleLayout.setVerticalGroup(
            pGrilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        jPanel1.add(pGrille);

        jScore.setBackground(new java.awt.Color(255, 0, 0));
        jScore.setText("SCORE :" + score);

        javax.swing.GroupLayout jScoresLayout = new javax.swing.GroupLayout(jScores);
        jScores.setLayout(jScoresLayout);
        jScoresLayout.setHorizontalGroup(
            jScoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jScoresLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jScore)
                .addContainerGap(193, Short.MAX_VALUE))
        );
        jScoresLayout.setVerticalGroup(
            jScoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jScoresLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScore)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel1.add(jScores);

        bRetour.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 1, 18)); // NOI18N
        bRetour.setText("RETOUR");
        bRetour.setMaximumSize(new java.awt.Dimension(120, 50));
        bRetour.setMinimumSize(new java.awt.Dimension(120, 50));
        bRetour.setPreferredSize(new java.awt.Dimension(120, 50));
        bRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRetourActionPerformed(evt);
            }
        });
        jPanel1.add(bRetour);

        jAbandon.setText("ABANDON");
        jAbandon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbandonActionPerformed(evt);
            }
        });
        jPanel1.add(jAbandon);

        jSauv.setText("SAUVEGARDE");
        jSauv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSauvActionPerformed(evt);
            }
        });
        jPanel1.add(jSauv);

        bChargement.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 1, 18)); // NOI18N
        bChargement.setText("CHARGEMENT");
        bChargement.setMaximumSize(new java.awt.Dimension(120, 50));
        bChargement.setMinimumSize(new java.awt.Dimension(120, 50));
        bChargement.setPreferredSize(new java.awt.Dimension(120, 50));
        bChargement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bChargementActionPerformed(evt);
            }
        });
        jPanel1.add(bChargement);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRetourActionPerformed
        this.setVisible(false);
        this.getParent().setVisible(true);
    }//GEN-LAST:event_bRetourActionPerformed

    private void pPiece1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece1MouseDragged
        int x = evt.getX();//coord de la souris par rapport au panel
        int y = evt.getY();
        int nouvX = x + pPiece1.getX();
        int nouvY = y + pPiece1.getY();
        pPiece1.setLocation(nouvX, nouvY);
    }//GEN-LAST:event_pPiece1MouseDragged

    private void pPiece1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece1MouseReleased
        try {
            
            boolean bool = false;
            int X = (int) ((pPiece1.getX() - pGrille.getX()) / (pGrille.getWidth() / 20));
            int Y = (int) ((pPiece1.getY() - pGrille.getY()) / (pGrille.getHeight() / 20));
            int scorePiece = 0;
            int nbPoint = P.getPlateau()[3].getNbPoint();
            if (X >= 0 && Y >= 0) {
                bool = P.deplacementPiece(X, Y, 0);
            }
            if (bool == true) {
                jouer("bloop.wav");
                score = score + nbPoint;
                P.créerPiece(0);
                initPieces(pPiece1, P.getPlateau()[0]);
            }
            
            score = P.getGrille().Verifchemins(score);
            jScore.setText("SCORE :" + score);
            
            P.getGrille().afficher(tabLabels);
        } catch (IndexOutOfBoundsException e) {
            //System.out.println("IOOBE");
        }
        if (P.getGrille().verifFinDuJeu(P) == true) {
            jouer("strings.wav");
            fenetre.showMessageDialog(null, "Partie terminée !\n Vous obtenez le score de :" + score + "points !", "Fin de partie", JOptionPane.INFORMATION_MESSAGE);
            J.sauvegardeScore();
            initialiser();
            P.getGrille().afficher(tabLabels);
            this.setVisible(false);
            this.getParent().setVisible(true);
        }
        
        this.pack();
    }//GEN-LAST:event_pPiece1MouseReleased

    private void pPiece4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece4MouseDragged
        int x = evt.getX();//coord de la souris par rapport au panel
        int y = evt.getY();
        int nouvX = x + pPiece4.getX();
        int nouvY = y + pPiece4.getY();
        pPiece4.setLocation(nouvX, nouvY);
    }//GEN-LAST:event_pPiece4MouseDragged

    private void pPiece4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece4MouseReleased
        try {
            boolean bool = false;
            int X = (int) ((pPiece4.getX() - pGrille.getX()) / (pGrille.getWidth() / 20));
            int Y = (int) ((pPiece4.getY() - pGrille.getY()) / (pGrille.getHeight() / 20));
            int scorePiece = 0;
            int nbPoint = P.getPlateau()[3].getNbPoint();
            if (X >= 0 && Y >= 0) {
                bool = P.deplacementPiece(X, Y, 3);
            }
            
            if (bool == true) {
                jouer("bloop.wav");
                score = score + nbPoint;
                P.créerPiece(3);
                initPieces(pPiece4, P.getPlateau()[3]);
            }
            
            score = P.getGrille().Verifchemins(score);
            jScore.setText("SCORE :" + score);
            P.getGrille().afficher(tabLabels);
        } catch (IndexOutOfBoundsException e) {
            System.out.println("IOOBE");
        }
        if (P.getGrille().verifFinDuJeu(P) == true) {
            jouer("strings.wav");
            fenetre.showMessageDialog(null, "Partie terminée !\n Vous obtenez le score de :" + score + "points !", "hello box", JOptionPane.INFORMATION_MESSAGE);
            J.sauvegardeScore();
            initialiser();
            P.getGrille().afficher(tabLabels);
            this.setVisible(false);
            this.getParent().setVisible(true);
        }
        this.pack();
    }//GEN-LAST:event_pPiece4MouseReleased

    private void pPiece2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece2MouseDragged
        int x = evt.getX();//coord de la souris par rapport au panel
        int y = evt.getY();
        int nouvX = x + pPiece2.getX();
        int nouvY = y + pPiece2.getY();
        pPiece2.setLocation(nouvX, nouvY);
    }//GEN-LAST:event_pPiece2MouseDragged

    private void pPiece2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece2MouseReleased
        try {
            boolean bool = false;
            int X = (int) ((pPiece2.getX() - pGrille.getX()) / (pGrille.getWidth() / 20));
            int Y = (int) ((pPiece2.getY() - pGrille.getY()) / (pGrille.getHeight() / 20));
            int scorePiece = 0;
            int nbPoint = P.getPlateau()[3].getNbPoint();
            if (X >= 0 && Y >= 0) {
                
                bool = P.deplacementPiece(X, Y, 1);
            }
            if (bool == true) {
                jouer("bloop.wav");
                score = score + nbPoint;
                P.créerPiece(1);
                initPieces(pPiece2, P.getPlateau()[1]);
            }
            
            score = P.getGrille().Verifchemins(score);
            jScore.setText("SCORE :" + score);
            
            P.getGrille().afficher(tabLabels);
        } catch (IndexOutOfBoundsException e) {
            System.out.println("IOOBE");
        }
        if (P.getGrille().verifFinDuJeu(P) == true) {
            jouer("strings.wav");
            fenetre.showMessageDialog(null, "Partie terminée !\n Vous obtenez le score de :" + score + "points !", "hello box", JOptionPane.INFORMATION_MESSAGE);
            J.sauvegardeScore();
            initialiser();
            P.getGrille().afficher(tabLabels);
            this.setVisible(false);
            this.getParent().setVisible(true);
            
        }
        this.pack();
    }//GEN-LAST:event_pPiece2MouseReleased

    private void pPiece3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece3MouseDragged
        int x = evt.getX();//coord de la souris par rapport au panel
        int y = evt.getY();
        int nouvX = x + pPiece3.getX();
        int nouvY = y + pPiece3.getY();
        pPiece3.setLocation(nouvX, nouvY);
    }//GEN-LAST:event_pPiece3MouseDragged

    private void pPiece3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece3MouseReleased
        try {
            boolean bool = false;
            int X = (int) ((pPiece3.getX() - pGrille.getX()) / (pGrille.getWidth() / 20));
            int Y = (int) ((pPiece3.getY() - pGrille.getY()) / (pGrille.getHeight() / 20));
            int scorePiece = 0;
            int nbPoint = P.getPlateau()[3].getNbPoint();
            if (X >= 0 && Y >= 0) {
                
                bool = P.deplacementPiece(X, Y, 2);
            }
            if (bool == true) {
                jouer("bloop.wav");
                score = score + nbPoint;
                P.créerPiece(2);
                initPieces(pPiece3, P.getPlateau()[2]);
            }
            
            P.getGrille().afficher(tabLabels);
            jScore.setText("SCORE :" + score);
        } catch (IndexOutOfBoundsException e) {
            System.out.println("IOOBE");
        }
        if (P.getGrille().verifFinDuJeu(P) == true) {
            jouer("strings.wav");
            fenetre.showMessageDialog(null, "Partie terminée !\n Vous obtenez le score de :" + score + "points !", "hello box", JOptionPane.INFORMATION_MESSAGE);
            J.sauvegardeScore();
            initialiser();
            P.getGrille().afficher(tabLabels);
            this.setVisible(false);
            this.getParent().setVisible(true);
        }
        this.pack();
    }//GEN-LAST:event_pPiece3MouseReleased

    private void pGrilleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pGrilleMouseReleased

    }//GEN-LAST:event_pGrilleMouseReleased

    private void pPiece1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece1MouseClicked
        P.getPlateau()[0].pivoter();
        afficherPiece(pPiece1, P.getPlateau()[0]);
        this.pack();
    }//GEN-LAST:event_pPiece1MouseClicked

    private void pPiece2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece2MouseClicked
        P.getPlateau()[1].pivoter();
        afficherPiece(pPiece2, P.getPlateau()[1]);
        this.pack();
    }//GEN-LAST:event_pPiece2MouseClicked

    private void pPiece3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece3MouseClicked
        P.getPlateau()[2].pivoter();
        afficherPiece(pPiece3, P.getPlateau()[2]);
        this.pack();
    }//GEN-LAST:event_pPiece3MouseClicked

    private void pPiece4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPiece4MouseClicked
        P.getPlateau()[3].pivoter();
        afficherPiece(pPiece4, P.getPlateau()[3]);
        this.pack();
    }//GEN-LAST:event_pPiece4MouseClicked

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed

    }//GEN-LAST:event_jPanel1KeyPressed

    private void jAbandonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAbandonActionPerformed
        jouer("strings.wav");
        J.majScore(score);
        fenetre.showMessageDialog(null, "Partie terminée !\n Vous obtenez le score de :" + score + "points !", "hello box", JOptionPane.INFORMATION_MESSAGE);
        J.sauvegardeScore();
        P.getGrille().creerGrille(20);
        
        initialiser();
        P.getGrille().afficher(tabLabels);
        this.setVisible(false);
        this.getParent().setVisible(true);
        this.pack();
    }//GEN-LAST:event_jAbandonActionPerformed

    private void jSauvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSauvActionPerformed
        J.majScore(score);
        J.sauvegardeGrille(P.getGrille());
       fenetre.showMessageDialog(null, "La partie a bien été sauvegardée", "Sauvegarde", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jSauvActionPerformed

    private void bChargementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bChargementActionPerformed
       J.chargementGrille(P.getGrille());
       P.getGrille().afficher(tabLabels);
       score = J.getScore();
       jScore.setText("SCORE :" + score);
       this.pack();
       
    }//GEN-LAST:event_bChargementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FJeu dialog = new FJeu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bChargement;
    private javax.swing.JButton bRetour;
    private javax.swing.JButton jAbandon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jSauv;
    private javax.swing.JLabel jScore;
    private javax.swing.JPanel jScores;
    private javax.swing.JPanel pGrille;
    private javax.swing.JPanel pPiece1;
    private javax.swing.JPanel pPiece2;
    private javax.swing.JPanel pPiece3;
    private javax.swing.JPanel pPiece4;
    // End of variables declaration//GEN-END:variables
}
